name: Linting

on:
  push:
    branches:
      - main
      - master
      - dev
  pull_request:
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  pre-commit:
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    name: Pre-commit
    steps:
      - name: Check out the repository
        uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Upgrade pip
        run: |
          pip install --upgrade pip
          pip --version

      - name: Install Python modules
        run: |
          pip install --constraint=.github/workflows/constraints.txt pre-commit black flake8 reorder-python-imports

      - name: Run pre-commit on all files
        run: |
          pre-commit run --all-files --show-diff-on-failure --color=always

  hacs:
    runs-on: "ubuntu-latest"
    name: HACS
    steps:
      - name: Check out the repository
        uses: "actions/checkout@v5"

      - name: HACS validation
        uses: "hacs/action@main"
        with:
          category: "integration"

  hassfest:
    runs-on: "ubuntu-latest"
    name: Hassfest
    steps:
      - name: Check out the repository
        uses: "actions/checkout@v5"

      - name: Hassfest validation
        uses: "home-assistant/actions/hassfest@master"

  tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    runs-on: "ubuntu-latest"
    name: Run tests
    steps:
      - name: Check out code from GitHub
        uses: "actions/checkout@v5"
      - name: Setup Python ${{ matrix.python-version }}
        uses: "actions/setup-python@v6"
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install requirements
        run: |
          pip install --upgrade pip
          pip install -r requirements_test.txt
      - name: Tests suite
        run: |
          pytest --cov=custom_components --cov-report=xml --cov-report=term-missing --cov-fail-under=80 tests/
      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        id: coverageComment
        with:
          pytest-xml-coverage-path: ./coverage.xml
